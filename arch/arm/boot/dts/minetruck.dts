/*
 * Copyright (C) 2013 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/* AM437x GP EVM */

/dts-v1/;

#include "am4372.dtsi"
#include "tk-som-am43xx.dtsi"
#include <dt-bindings/pinctrl/am43xx.h>
#include <dt-bindings/pwm/pwm.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {

	model = "TK SOM AM437x minetruck";
	compatible = "technokom,minetruck","ti,am4372","ti,am43";

	aliases {
		display0 = &lcd0;
	};

	sc_uartclk: mclk_osc {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <16000000>;
	};

	lcd0: display {
		compatible = "osddisplays,osd057T0559-34ts", "panel-dpi";
		label = "lcd";
		
		pinctrl-names = "default";

		panel-timing {
			clock-frequency = <51206400>;
			hactive = <1024>;
			vactive = <768>;
			hfront-porch = <24>;
			hback-porch = <24>;
			hsync-len = <136>;
			vback-porch = <3>;
			vfront-porch = <3>;
			vsync-len = <6>;
			hsync-active = <1>;
			vsync-active = <1>;
			de-active = <1>;
			pixelclk-active = <1>;
		};

		port {
			lcd_in: endpoint {
				remote-endpoint = <&dpi_out>;
			};
		};
	};

	sound0: sound@0 {
		compatible = "simple-audio-card";
		simple-audio-card,name = "AM437x-TK";
		simple-audio-card,widgets =
			"Headphone", "Headphone Jack",
			"Line", "Line In",
			"Speaker", "Speaker";
		simple-audio-card,routing =
			"Headphone Jack", "HPLOUT",
			"Headphone Jack", "HPROUT",
			"LINE1L", "Line In",
			"LINE1R", "Line In",
			"Speaker", "SPL",
			"Speaker", "SPR";
		simple-audio-card,format = "dsp_b";
		simple-audio-card,bitclock-master = <&sound0_master>;
		simple-audio-card,frame-master = <&sound0_master>;
		simple-audio-card,bitclock-inversion;

		simple-audio-card,cpu {
			sound-dai = <&mcasp1>;
			system-clock-frequency = <12000000>;
		};

		sound0_master: simple-audio-card,codec {
			sound-dai = <&lm49350>;
			system-clock-frequency = <12000000>;
		};
	};

    wlan_en_reg: fixedregulator-mmcwl {
		compatible = "regulator-fixed";
		regulator-name = "vmmcwl_fixed";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		startup-delay-us= <70000>;
		/* WL_EN */
		gpio = <&gpio1 23 GPIO_ACTIVE_HIGH>;
		enable-active-high;
	};
};

&am43xx_pinmux {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&wlan_pins_default &pfo_pins_default &gpio_in_plus_pin &gpio_in_minus_pin &gpio_out_pin>;


	dcan0_default: dcan0_default_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x91c, PIN_OUTPUT | MUX_MODE1)		/* (C16) mii1_txd3.dcan0_tx */
			AM4372_IOPAD(0x920, PIN_INPUT_PULLUP | MUX_MODE1)	/* (C13) mii1_txd2.dcan0_rx */
		>;
	};

	dcan0_sleep: dcan0_sleep_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x91c, PIN_INPUT_PULLUP | MUX_MODE7)	/* (C16) mii1_txd3 */
			AM4372_IOPAD(0x920, PIN_INPUT_PULLUP | MUX_MODE7)	/* (C13) mii1_txd2 */
		>;
	};


    pfo_pins_default: pfo_pins_default {
		pinctrl-single,pins = <
            AM4372_IOPAD(0xa3c, PIN_INPUT | MUX_MODE7) /* (F24) gpio5_9.gpio5[9] pfo*/
			AM4372_IOPAD(0x89c, PIN_INPUT | MUX_MODE7) /* (C10) gpmc_be0n_cle.gpio2[5] scap_off */
		>;
	};

    rpm_pins_default: rpm_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x9d0, PIN_INPUT_PULLUP | MUX_MODE7) /* (AD24) cam1_data8.gpio4[8] */
		>;
	};

    gpio_onewire_interrupt_pin: gpio_onewire_interrupt_pin {
		pinctrl-single,pins = <    
            AM4372_IOPAD(0xA34, PIN_INPUT_PULLUP | MUX_MODE7 ) /* (K24) uart3_rtsn.gpio5[1] */
        >;
    };

    gpio_in_plus_pin: gpio_in_plus_pin {
		pinctrl-single,pins = <    
            AM4372_IOPAD(0xa74, PIN_INPUT | MUX_MODE7) /* (C24) xdma_event_intr1.gpio0[20] */
            AM4372_IOPAD(0x834, PIN_INPUT | MUX_MODE7) /* (C11) gpmc_ad13.gpio1[13] */
        >;
    };

    gpio_in_minus_pin: gpio_in_minus_pin {
		pinctrl-single,pins = <    
            AM4372_IOPAD(0x9d4, PIN_INPUT_PULLUP | MUX_MODE7) /* (AD25) cam1_hd.gpio4[9] */
			AM4372_IOPAD(0x9d8, PIN_INPUT_PULLUP | MUX_MODE7) /* (AC23) cam1_vd.gpio4[10] */
        >;
    };

    gpio_out_pin: gpio_out_pin {
		pinctrl-single,pins = <    
            AM4372_IOPAD(0x998, PIN_OUTPUT | SLEWCTRL_FAST | MUX_MODE7) /* (H23) mcasp0_axr0.gpio3[16] */
            AM4372_IOPAD(0x840, PIN_OUTPUT | SLEWCTRL_FAST | MUX_MODE7) /* (C3) gpmc_a0.gpio1[16] */
        >;
    };

	i2c1_pins_default: i2c1_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0xa40, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE1)  /* (G20) gpio5_10.I2C1_SCL */
			AM4372_IOPAD(0xa48, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE1)  /* (E25) gpio5_12.I2C1_SDA */
		>;
	};

	i2c2_pins_default: i2c2_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x97c, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE3)  /* (L22) uart1_rtsn.I2C2_SCL */
			AM4372_IOPAD(0x978, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE3)  /* (K22) uart1_ctsn.I2C2_SDA */

            AM4372_IOPAD(0xa60, PIN_INPUT_PULLUP | MUX_MODE7) /* (N20) spi2_sclk.gpio3[24] interrupt lsm6d*/

            AM4372_IOPAD(0xa00, PIN_OUTPUT | MUX_MODE7) /* (AD23) cam1_data6.gpio4[20] powerdown adv7513*/
            AM4372_IOPAD(0x9fc, PIN_INPUT | MUX_MODE7) /* (AE23) cam1_data5.gpio4[19] */
		>;
	};

	mmc2_pins: pinmux_mmc2_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x88c, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (A12) gpmc_clk.mmc2_clk */
			AM4372_IOPAD(0x888, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (B12) gpmc_csn3.mmc2_cmd */
			AM4372_IOPAD(0x844, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (C5) gpmc_a1.mmc2_dat0 */
			AM4372_IOPAD(0x848, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (C6) gpmc_a2.mmc2_dat1 */
			AM4372_IOPAD(0x84c, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (A4) gpmc_a3.mmc2_dat2 */
			AM4372_IOPAD(0x878, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (A3) gpmc_be1n.mmc2_dat3 */
		>;
	};

	mmc2_sleep_pins: pinmux_mmc2_sleep_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x88c, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (A12) gpmc_clk.mmc2_clk */
			AM4372_IOPAD(0x888, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (B12) gpmc_csn3.mmc2_cmd */
			AM4372_IOPAD(0x844, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (C5) gpmc_a1.mmc2_dat0 */
			AM4372_IOPAD(0x848, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (C6) gpmc_a2.mmc2_dat1 */
			AM4372_IOPAD(0x84c, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (A4) gpmc_a3.mmc2_dat2 */
			AM4372_IOPAD(0x878, PIN_INPUT_PULLDOWN | MUX_MODE7) /* (A3) gpmc_be1n.mmc2_dat3 */
		>;
	};


	cpsw_default: cpsw_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x90c, PIN_INPUT_PULLUP | MUX_MODE1 ) /* (B14) mii1_crs.rmii1_crs_dv */
			AM4372_IOPAD(0x910, PIN_INPUT_PULLUP | MUX_MODE1 ) /* (B13) mii1_rx_er.rmii1_rxer */
			AM4372_IOPAD(0x914, PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (A13) mii1_tx_en.rmii1_txen */
			AM4372_IOPAD(0x928, PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (B15) mii1_txd0.rmii1_txd0 */
			AM4372_IOPAD(0x924, PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (A14) mii1_txd1.rmii1_txd1 */
			AM4372_IOPAD(0x940, PIN_INPUT | MUX_MODE1 ) /* (F17) mii1_rxd0.rmii1_rxd0 */
			AM4372_IOPAD(0x93c, PIN_INPUT | MUX_MODE1 ) /* (B16) mii1_rxd1.rmii1_rxd1 */
			AM4372_IOPAD(0x944, PIN_INPUT_PULLUP | MUX_MODE0 ) /* (A16) rmii1_ref_clk.rmii1_refclk */

		>;
	};

	cpsw_sleep: cpsw_sleep {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x90c, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x910, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x914, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x928, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x924, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x940, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x93c, PIN_INPUT_PULLDOWN | MUX_MODE7 )
			AM4372_IOPAD(0x944, PIN_INPUT_PULLDOWN | MUX_MODE7 )
		>;
	};

	davinci_mdio_default: davinci_mdio_default {
		pinctrl-single,pins = <
			/* MDIO */
			AM4372_IOPAD(0x948, PIN_INPUT_PULLUP | SLEWCTRL_FAST | MUX_MODE0)	/* mdio_data.mdio_data */
			AM4372_IOPAD(0x94c, PIN_OUTPUT_PULLUP | MUX_MODE0)			/* mdio_clk.mdio_clk */
		>;
	};

	davinci_mdio_sleep: davinci_mdio_sleep {
		pinctrl-single,pins = <
			/* MDIO reset value */
			AM4372_IOPAD(0x948, PIN_INPUT | PULL_DISABLE | MUX_MODE7)
			AM4372_IOPAD(0x94c, PIN_INPUT | PULL_DISABLE | MUX_MODE7)
		>;
	};

    periph_pin_reset: periph_reset {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x994, PIN_OUTPUT | MUX_MODE7) /* (N22) mcasp0_fsx.gpio3[15] */
		>;
	};


	dss_pins: dss_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x8a0, PIN_OUTPUT_PULLUP | MUX_MODE7)
			AM4372_IOPAD(0x8a4, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8a8, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8ac, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8b0, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8b4, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8b8, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8bc, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8c0, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8c4, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8c8, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8cc, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8d0, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8d4, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8d8, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8dc, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8e8, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x8ec, PIN_OUTPUT_PULLUP | MUX_MODE0)
			AM4372_IOPAD(0x83c, PIN_OUTPUT_PULLUP | MUX_MODE1)
			AM4372_IOPAD(0x838, PIN_OUTPUT_PULLUP | MUX_MODE1)
            AM4372_IOPAD(0x8e0, PIN_OUTPUT_PULLUP | MUX_MODE0) /* (B23) dss_vsync.dss_vsync */
			AM4372_IOPAD(0x8e4, PIN_OUTPUT_PULLUP | MUX_MODE0) /* (A23) dss_hsync.dss_hsync */

		>;
	};

	uart1_pins: uart1_pins {
		pinctrl-single,pins = <
            AM4372_IOPAD(0x9e8, PIN_INPUT | MUX_MODE1) /* (AB20) cam1_data0.uart1_rxd */
			AM4372_IOPAD(0x9ec, PIN_OUTPUT | MUX_MODE1) /* (AC21) cam1_data1.uart1_txd */
			AM4372_IOPAD(0x9f0, PIN_INPUT | MUX_MODE1) /* (AD21) cam1_data2.uart1_ctsn */
			AM4372_IOPAD(0x9f4, PIN_OUTPUT | MUX_MODE1) /* (AE22) cam1_data3.uart1_rtsn */

            AM4372_IOPAD(0x858, PIN_OUTPUT | MUX_MODE7) /* (E8) gpmc_a6.gpio1[22] bt enable*/
		>;
	};

    uart2_pins: uart2_pins {
        pinctrl-single,pins = <
		    AM4372_IOPAD(0x92c, PIN_INPUT_PULLUP | MUX_MODE1 ) /* (D14) mii1_tx_clk.uart2_rxd */
    		AM4372_IOPAD(0x930, PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (D13) mii1_rx_clk.uart2_txd */
    		AM4372_IOPAD(0x860,  PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (F7) gpmc_a8.gpio1[24] */
	    >;
    };

    uart3_pins: uart3_pins {
        pinctrl-single,pins = <
            AM4372_IOPAD(0x934, PIN_INPUT_PULLUP | MUX_MODE1 ) /* (C14) mii1_rxd3.uart3_rxd */
    		AM4372_IOPAD(0x938, PIN_OUTPUT_PULLDOWN | MUX_MODE1 ) /* (E16) mii1_rxd2.uart3_txd */
            AM4372_IOPAD(0x9b8,  PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (AC18) cam0_field.gpio4[2] */
	    >;
    };

    uart4_pins: uart4_pins {
        pinctrl-single,pins = <
            AM4372_IOPAD(0x968, PIN_INPUT_PULLUP | MUX_MODE1) /* (L25) uart0_ctsn.uart4_rxd */
			AM4372_IOPAD(0x96c, PIN_OUTPUT_PULLDOWN | MUX_MODE1) /* (J25) uart0_rtsn.uart4_txd */
             AM4372_IOPAD(0x830, PIN_OUTPUT_PULLDOWN | MUX_MODE7)  /* (E11) gpmc_ad12.gpio1[12] */
	    >;
    };

    uart5_pins: uart5_pins {
        pinctrl-single,pins = <
    		AM4372_IOPAD(0x908, PIN_INPUT_PULLUP | MUX_MODE3 ) /* (D16) mii1_col.uart5_rxd */
    		AM4372_IOPAD(0x918, PIN_OUTPUT_PULLDOWN | MUX_MODE3 ) /* (A15) mii1_rx_dv.uart5_txd */
            AM4372_IOPAD(0x86c,  PIN_OUTPUT_PULLDOWN | MUX_MODE7 ) /* (D8) gpmc_a11.gpio1[27] */
	    >;
    };


	periph_pin_enable: periph_pin_enable {
		pinctrl-single,pins = <
	        AM4372_IOPAD(0xA68, PIN_OUTPUT | MUX_MODE7 )  /* (P20) spi2_d1.gpio3[23] */
		>;
	};

	wlan_pins_default: pinmux_wlan_pins_default {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x868, PIN_INPUT_PULLDOWN  | WAKEUP_ENABLE | MUX_MODE7 ) /* (G8) gpmc_a10.gpio1[26] */
			AM4372_IOPAD(0x85c, PIN_OUTPUT | MUX_MODE7 ) /* (F6) gpmc_a7.gpio1[23] */

            AM4372_IOPAD(0x894, PIN_OUTPUT | MUX_MODE7) /* (E10) gpmc_oen_ren.gpio2[3] power wifi global enable*/
		>;
	};	

	mcasp1_pins: mcasp1_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x9ac, PIN_INPUT_PULLDOWN | MUX_MODE3)
			AM4372_IOPAD(0x9a0, PIN_INPUT_PULLDOWN | MUX_MODE3)
			AM4372_IOPAD(0x9a4, PIN_INPUT_PULLDOWN | MUX_MODE3)
			AM4372_IOPAD(0x9a8, PIN_OUTPUT_PULLDOWN | MUX_MODE3)

		>;
	};

	mcasp1_sleep_pins: mcasp1_sleep_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x9ac, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x9a0, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x9a4, PIN_INPUT_PULLDOWN | MUX_MODE7)
			AM4372_IOPAD(0x9a8, PIN_INPUT_PULLDOWN | MUX_MODE7)
		>;
	};

	spi0_pins: pinmux_spi0_pins {
		pinctrl-single,pins = <
			AM4372_IOPAD(0x950, PIN_INPUT_PULLUP | MUX_MODE0)           /* spi0_clk.spi0_clk */
			AM4372_IOPAD(0x954, PIN_INPUT_PULLUP | MUX_MODE0)           /* spi0_d0.spi0_d0 */
			AM4372_IOPAD(0x958, PIN_INPUT_PULLUP | MUX_MODE0)           /* spi0_d1.spi0_d1 */
			AM4372_IOPAD(0x95c, PIN_INPUT_PULLUP | MUX_MODE0)          /* spi0_cs0.spi0_cs0 */
			AM4372_IOPAD(0x9cc, PIN_INPUT_PULLUP | MUX_MODE7)
		>;
	};

};

&i2c1 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c1_pins_default &gpio_onewire_interrupt_pin>;
	clock-frequency = <400000>;

    eepromboard: eepromboard@50 {
        compatible = "atmel,24c01";
        reg = <0x50>;
        pagesize = <8>;
    };

	lm49350: lm49350@1a {
		#sound-dai-cells = <0>;
		compatible = "ti,lm49350";
		reg = <0x1a>;
		status = "okay";
		/*
        power-amp-gpios = <&gpio5 3 GPIO_ACTIVE_HIGH>;
		sd-amp-gpios    = <&gpio5 13 GPIO_ACTIVE_HIGH>;
        */
	};

    ds2482: ds2482@18 {
        compatible = "dallas,ds2482";
        reg = <0x18>;
		status = "okay";
    };
};

&i2c2 {
	status = "okay";
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&i2c2_pins_default>;
	clock-frequency = <400000>;

    lsm6dsl@6a {
    	compatible = "st,lsm6dsl";
	    reg = <0x6a>;
    	interrupt-parent = <&gpio3>;
    	interrupts = <24 IRQ_TYPE_EDGE_RISING>;
    };


    adv7513: adv7513@39 {
		compatible = "omapdss,adi,adv7513";
		reg = <0x39>;

		interrupt-parent = <&gpio4>;
		interrupts = <19 IRQ_TYPE_EDGE_FALLING>;

        pd-gpio = <&gpio4 20 GPIO_ACTIVE_HIGH>;

		adi,input-depth = <8>;
		adi,input-colorspace = "rgb";
		adi,input-clock = "1x";
		adi,input-style = <2>;
		adi,input-justification = "left";
	};

};

&spi0 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi0_pins>;
	status = "okay";
	ti,spi-num-cs = <1>;
	ti,pindir-d0-out-d1-in;

	dmas = <&edma 16 0
		&edma 17 0>;
	dma-names = "tx0", "rx0";
	
	sc16is752: sc16is752@0 {
		compatible = "nxp,sc16is752";
		reg = <0>;
		spi-max-frequency = <24000000>;
		clocks = <&sc_uartclk>;
		interrupt-parent = <&gpio4>;
		interrupts = <7 IRQ_TYPE_EDGE_FALLING>;
		gpio-controller;
		#gpio-cells = <2>;
	};
};

&epwmss2	 {
	status = "okay";
};

&tscadc {
	status = "okay";

	adc {
		ti,adc-channels = <0 1 2 3 4 5 6 7>;
	};
};

&adc1 {
	status = "okay";
	ti,adc-channels = <0 1 2 3 4 5 6 7>;
};


&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";

};

&gpio2 {
	status = "okay";
    p3 {
		gpio-hog;
		gpios = <3 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "PowerWiFi";
	};
};

&gpio3 {
	status = "okay";
	pinctrl-0 = <&periph_pin_enable &periph_pin_reset>;
    ti,gpio-always-on;
    ti,no-reset-on-init;

	p15 {
		gpio-hog;
		gpios = <15 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "SCEnable";
	};

	p23 {
		gpio-hog;
		gpios = <23 GPIO_ACTIVE_HIGH>;
		output-high;
		line-name = "PeriphEnable";
	};

};

&gpio4 {
	status = "okay";
};

&gpio5 {
	status = "okay";
};

&mmc3 {
	status = "okay";
	dmas = <&edma_xbar 30 0 1>,
		<&edma_xbar 31 0 2>;
	dma-names = "tx", "rx";
	vmmc-supply = <&wlan_en_reg>;

	bus-width = <4>;
	pinctrl-names = "default";
	pinctrl-0 = <&mmc2_pins>;
    pinctrl-1 = <&mmc2_sleep_pins>;

    ti,non-removable;
	cap-power-off-card;
	keep-power-in-suspend;

	#address-cells = <1>;
	#size-cells = <0>;

	wlcore: wlcore@0 {
		compatible = "ti,wl1835";
		reg = <2>;
		interrupt-parent = <&gpio1>;
		interrupts = <26 IRQ_TYPE_LEVEL_HIGH>;
	};
};

&usb2_phy1 {
	status = "okay";
};

&usb1 {
	dr_mode = "peripheral";
	status = "okay";
};

&usb2_phy2 {
	status = "okay";
};

&usb2 {
	dr_mode = "host";
	status = "okay";
};

&mac {
	slaves = <1>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&cpsw_default>;
	pinctrl-1 = <&cpsw_sleep>;
	status = "okay";
};

&davinci_mdio {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&davinci_mdio_default>;
	pinctrl-1 = <&davinci_mdio_sleep>;
	status = "okay";
};

&dcan0 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&dcan0_default>;
	pinctrl-1 = <&dcan0_sleep>;
	status = "okay";
};

&cpsw_emac0 {
	phy_id = <&davinci_mdio>, <7>;
	phy-mode = "rmii";
};

&phy_sel {
	rmii-clock-ext;
};

&elm {
	status = "okay";
};

&mcasp1 {
	#sound-dai-cells = <0>;
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&mcasp1_pins>;
	pinctrl-1 = <&mcasp1_sleep_pins>;

	status = "okay";

	op-mode = <0>; /* MCASP_IIS_MODE */
	tdm-slots = <2>;
	/* 4 serializers */
	serial-dir = <  /* 0: INACTIVE, 1: TX, 2: RX */
		1 2 0 0
	>;
	tx-num-evt = <32>;
	rx-num-evt = <32>;
};

&uart1 {
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart1_pins>;

    bluetooth {
		compatible = "ti,wl1835-st";
		enable-gpios = <&gpio1 22 GPIO_ACTIVE_HIGH>;
	};
};

&uart4 {
    compatible = "ti,omap2-uart-legacy";
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart4_pins>;
    rts-gpio = <&gpio4 2 GPIO_ACTIVE_HIGH>;
    rs485-rts-active-high;
    rs485-rts-delay = <0 0>;
    linux,rs485-enabled-at-boot-time;
};

&uart2 {
    compatible = "ti,omap2-uart-legacy";
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart2_pins>;
    rts-gpio = <&gpio1 24 GPIO_ACTIVE_HIGH>;
    rs485-rts-active-high;
    rs485-rts-delay = <0 0>;
    linux,rs485-enabled-at-boot-time;
};


&uart5 {
    compatible = "ti,omap2-uart-legacy";
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&uart5_pins>;
    rts-gpio = <&gpio1 27 GPIO_ACTIVE_HIGH>;
    rs485-rts-active-high;
    rs485-rts-delay = <0 0>;
    linux,rs485-enabled-at-boot-time;
};

&dss {
	status = "okay";

	pinctrl-names = "default";
	pinctrl-0 = <&dss_pins>;

	port {
		dpi_out: endpoint@0 {
			remote-endpoint = <&lcd_in>;
			data-lines = <18>;
		};
	};
};


&rtc {
	status = "disabled";
};

&sgx {
	status = "okay";
};
